{"version":3,"sources":["components/MyMarker.js","components/Map.js","components/MyRestaurants.js","App.js","reportWebVitals.js","index.js"],"names":["MyMarker","props","LeafIcon","Icon","extend","options","blueIcon","iconUrl","shadowUrl","redIcon","Marker","position","icon","color","Popup","restaurant_name","address","src","restaurant_image","alt","L","iconSize","iconAnchor","popupAnchor","Map","venues","restaurants","setRestaurants","useState","open","setOpen","name","setName","setAddress","description","setDescription","image","setImage","Newposition","setNewPosition","NewRating","setNewRating","TextFieldRef","useRef","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","TextField","ref","value","onChange","e","target","label","multiline","rows","defaultValue","variant","DialogActions","Button","onClick","preventDefault","rests","newRestaurant","restaurant_description","avg_rating","reviews","isReviewsOpen","push","current","focus","autoFocus","MapContainer","className","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Date","now","map","r","MapConsumer","on","latlng","lat","lng","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","inputRoot","inputInput","padding","spacing","paddingLeft","width","breakpoints","up","BootstrapInput","withStyles","marginTop","input","borderRadius","palette","background","paper","border","fontSize","fontFamily","join","borderColor","boxShadow","InputBase","RecipeReviewCard","classes","rating","setRating","body","setBody","inputRef","textareaRef","style","textAlign","paddingBottom","FormControl","margin","InputLabel","htmlFor","NativeSelect","restos","filter","res","console","log","aria-label","restaurant","index","Card","CardMedia","display","paddingRight","CardContent","CardActions","disableSpacing","IconButton","clsx","handleOpenReviews","aria-expanded","Collapse","in","timeout","unmountOnExit","onSubmit","ratingSum","comment","user_name","rev","parseInt","length","handleSubmit","type","required","review","i","Divider","drawerWidth","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","useTheme","React","restaurantsData","setVenues","setPosition","showPosition","coords","latitude","longitude","useEffect","getVenues","navigator","geolocation","getCurrentPosition","axios","get","URLSearchParams","client_id","client_secret","query","near","v","radius","ll","categoryId","then","response","data","venue","location","categories","pluralName","catch","error","CssBaseline","AppBar","Toolbar","edge","Typography","noWrap","Drawer","anchor","direction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da24b9b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Icon } from \"leaflet\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\n\r\nexport default function MyMarker(props) {\r\n  //  Create the Icon\r\n  const LeafIcon = Icon.extend({\r\n    options: {},\r\n  });\r\n\r\n  const blueIcon = new LeafIcon({\r\n      iconUrl:\r\n        \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|abcdef&chf=a,s,ee00FFFF\",\r\n      shadowUrl: \"https://unpkg.com/leaflet@1.7/dist/images/marker-shadow.png\",\r\n    }),\r\n    redIcon =  new LeafIcon({\r\n      iconUrl:\r\n        \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000&chf=a,s,ee00FFFF\",\r\n    });\r\n\r\n  return (\r\n    <Marker\r\n      position={props.position}\r\n      icon={props.color === \"red\" ? redIcon : blueIcon}\r\n    >\r\n      <Popup>\r\n        <h3>{props.restaurant_name}</h3>\r\n        <p>{props.address}</p>\r\n        <img src={props.restaurant_image} alt=\"\" />\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n}\r\n// <=>\r\n","import React, { useState, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, MapConsumer } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport MyMarker from \"./MyMarker\";\r\nimport \"./Map.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n//Icon propertie's view for the map\r\nconst icon = L.icon({\r\n  iconSize: [25, 41],\r\n  iconAnchor: [10, 41],\r\n  popupAnchor: [2, -40],\r\n  iconUrl:\r\n    \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|abcdef&chf=a,s,ee00FFFF\",\r\n});\r\n\r\n// Render Marker on the Leaflet Map\r\nfunction renderMarkers(venues) {\r\n  return (\r\n    <div>\r\n      {venues.map((r) => {\r\n        return (\r\n          <MyMarker\r\n            key={Date.now() + r.restaurant_name}\r\n            position={r.position}\r\n            restaurant_name={r.restaurant_name}\r\n            address={r.address}\r\n            image={r.restaurant_image}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Map({ restaurants, setRestaurants }) {\r\n  // All the restaurant's State\r\n  const [position, setPosition] = useState([4.05382, 9.73432]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [Newposition, setNewPosition] = useState([4.05382, 9.73432]);\r\n  const [NewRating, setNewRating] = useState();\r\n  \r\n\r\n  const TextFieldRef = useRef();\r\n\r\n  // Open the Modal on the Map\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // Close the Modal on the Map\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Function to Save the new restaurant on the map\r\n  //and the Drawer with the correct properties\r\n  const handleSaveRestaurant = (e) => {\r\n    e.preventDefault();\r\n    if (name && address) {\r\n      let rests = [...restaurants];\r\n      let newRestaurant = {\r\n        id: \"\",\r\n        position: Newposition,\r\n        restaurant_name: name,\r\n        restaurant_description: description,\r\n        restaurant_image: image,\r\n        address: address,\r\n        avg_rating: NewRating,\r\n        reviews: [],\r\n        isReviewsOpen: false,\r\n      };\r\n      rests.push(newRestaurant);\r\n      setRestaurants(rests);\r\n      TextFieldRef.current.focus();\r\n    }\r\n    setOpen(false);\r\n  };\r\n  // Get Location function: catch the current position coordinates for the modal\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      {/*Modal to enter and save the informations of the new restaurant\r\n       on the new marker on the Leaflet Map*/}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n          <div>\r\n            <TextField\r\n              ref={TextFieldRef}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              label=\"Name\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              ref={TextFieldRef}\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n              label=\"image link\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              ref={TextFieldRef}\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              label=\"Address\"\r\n              multiline\r\n              rows={4}\r\n              defaultValue=\"Default Value\"\r\n              variant=\"filled\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              ref={TextFieldRef}\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              label=\"Description\"\r\n              multiline\r\n              rows={2}\r\n              defaultValue=\"Default Value\"\r\n              variant=\"filled\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              ref={TextFieldRef}\r\n              value={NewRating}\r\n              onChange={(e) => setNewRating(e.target.value)}\r\n              label=\"NewRating\"\r\n              multiline\r\n              rows={4}\r\n              defaultValue={NewRating}\r\n              variant=\"filled\"\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSaveRestaurant} color=\"primary\" autoFocus>\r\n            Save and close\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* Leaflet Map*/}\r\n      <MapContainer\r\n        className=\"map-container\"\r\n        center={position}\r\n        zoom={15}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n        <MyMarker\r\n          key={Date.now()}\r\n          position={position}\r\n          restaurant_name={\"Center\"}\r\n          address={\"\"}\r\n          image={\"\"}\r\n          color={\"red\"}\r\n        />\r\n        {renderMarkers(restaurants)}\r\n        {/*Click event to catch and set the new coordinates to the new restaurant on the Map*/}\r\n        <MapConsumer>\r\n          {(map) => {\r\n            // console.log(\"map center:\", map.getCenter());\r\n            map.on(\"click\", function (e) {\r\n              const { lat, lng } = e.latlng;\r\n              //let restTitle = prompt('enter a title');\r\n              setNewPosition([lat, lng]);\r\n              handleClickOpen();\r\n              // L.marker([lat, lng], { icon }).addTo(map);\r\n            });\r\n            return null;\r\n          }}\r\n        </MapConsumer>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\n// <=>\r\n","import React, { useState, useRef } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport restaurantsData from \"./restaurantsData.json\";\r\nimport \"./MyRestaurants.css\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\n//import { FilledInput } from '@material-ui/core';\r\n\r\n//Styles the Drawer\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 150,\r\n    paddingTop: \"56.25%\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],  \r\n  },\r\n\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function RecipeReviewCard({ restaurants, setRestaurants }) {\r\n  // All the comment's States\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [rating, setRating] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const inputRef = useRef();\r\n  const textareaRef = useRef();\r\n\r\n  // Sort the restaurants by rating\r\n  const handleSearch = (e) => {\r\n    let restos = restaurants.filter((res) => {\r\n      if (e.target.value === \"\") {\r\n        return true;\r\n      }\r\n      if (e.target.value === \"1\") {\r\n        return res.avg_rating >= 1 && res.avg_rating < 2;\r\n      }\r\n      if (e.target.value === \"2\") {\r\n        return res.avg_rating >= 2 && res.avg_rating < 3;\r\n      }\r\n      if (e.target.value === \"3\") {\r\n        return res.avg_rating >= 3 && res.avg_rating < 4;\r\n      }\r\n      if (e.target.value === \"4\") {\r\n        return res.avg_rating >= 4 && res.avg_rating < 5;\r\n      }\r\n      if (e.target.value === \"5\") {\r\n        return res.avg_rating === 5;\r\n      }\r\n    });\r\n    console.log(e.target.value);\r\n    setRestaurants(restos);\r\n  };\r\n\r\n  // Set and save avg rating \r\n  //with the new comment from the current restaurant\r\n  const handleSubmit = (e, index) => {\r\n    e.preventDefault();\r\n    let ratingSum = 0;\r\n    let rests = [...restaurants];\r\n    const comment = { user_name: name, comment: body, rating: rating };\r\n    rests[index].reviews.push(comment);\r\n    // Catch the current restaurant index \r\n    //and sum the ratings to get the average rating\r\n    for( const rev of rests[index].reviews){\r\n      // Get the current rating and add it to the current sum\r\n      ratingSum += parseInt(rev.rating);\r\n    }\r\n    ratingSum = ratingSum/rests[index].reviews.length;\r\n    rests[index].avg_rating = ratingSum;\r\n    setRestaurants(rests);\r\n    setName(\"\");\r\n    setBody(\"\");\r\n    setRating(\"\");\r\n    inputRef.current.focus();\r\n    textareaRef.current.focus();\r\n  };\r\n\r\n  // Shows the comment on the current restaurant\r\n  const handleOpenReviews = (index) => {\r\n    let rests = [...restaurants];\r\n    rests[index].isReviewsOpen = !rests[index].isReviewsOpen;\r\n    setRestaurants(rests);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: \"center\", paddingBottom: \"10px\" }}>\r\n        {/* Filter the restaurants by rating*/}\r\n        <FormControl className={classes.margin}>\r\n          <InputLabel htmlFor=\"demo-customized-select-native\">\r\n            By Rating\r\n          </InputLabel>\r\n          <NativeSelect\r\n            id=\"demo-customized-select-native\"\r\n            onChange={handleSearch}\r\n            input={<BootstrapInput />}\r\n          >\r\n            <option aria-label=\"None\" value=\"\" />\r\n            <option value={1}>One </option>\r\n            <option value={2}>Two</option>\r\n            <option value={3}>Three</option>\r\n            <option value={4}>Four</option>\r\n            <option value={5}>Five</option>\r\n          </NativeSelect>\r\n        </FormControl>\r\n      </div>\r\n\r\n      {/*Display the restaurants with their properties on the Drawer*/}\r\n      {restaurants.map((restaurant, index) => (\r\n        <Card className={classes.root} key={index}>\r\n          <CardMedia\r\n            style={{\r\n              width: \"200px\",\r\n              display: \"flex\",\r\n              textAlign: \"center\",\r\n              paddingBottom: \"5px\",\r\n              paddingTop: \"5px\",\r\n              paddingRight: \"20px\",\r\n              paddingLeft: \"20px\",\r\n            }}\r\n            className={classes.media}\r\n            image={restaurant.restaurant_image}\r\n          />\r\n          <CardContent>\r\n            <h4>{restaurant.restaurant_name}</h4>\r\n            <p>{restaurant.restaurant_description}</p>\r\n          </CardContent>\r\n\r\n          <CardActions disableSpacing>\r\n            <h4 style={{ border: \"2px\", borderRadius: \"1px\" }}>\r\n              Rating: {restaurant.avg_rating}\r\n            </h4>\r\n            {/* Accordion to open reviews and add new comment*/}\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: restaurant.isReviewsOpen,\r\n              })}\r\n              onClick={() => handleOpenReviews(index)}\r\n              aria-expanded={restaurant.isReviewsOpen}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n          {/* Open the Modal for the new review */}\r\n          <Collapse in={restaurant.isReviewsOpen} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n              <form onSubmit={(e) => handleSubmit(e, index)}>\r\n                <label>Customer name:</label>\r\n                <input\r\n                  ref={inputRef}\r\n                  type=\"text\"\r\n                  required\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <label>Comment body:</label>\r\n                <textarea\r\n                  ref={textareaRef}\r\n                  required\r\n                  value={body}\r\n                  onChange={(e) => setBody(e.target.value)}\r\n                ></textarea>\r\n                <label>Customer rating:</label>\r\n                <input\r\n                  ref={inputRef}\r\n                  type=\"text\"\r\n                  required\r\n                  value={rating}\r\n                  onChange={(e) => setRating(e.target.value)}\r\n                />\r\n                <button>Add Comment</button>\r\n              </form>\r\n              {/* Shows reviews from the restaurantsData.json on the Drawer*/}\r\n              <div className=\"posts\">\r\n                {restaurant.reviews.map((review, i) => {\r\n                  return (\r\n                    <div key={i} className=\"post\">\r\n                      <h4>{review.user_name}</h4>\r\n                      <p>{review.comment}</p>\r\n                      <h5>Rating: {review.rating}</h5>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardContent>\r\n          </Collapse>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n<Divider />;\r\n// <=>\r\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Map from \"./components/Map\";\nimport MyRestaurants from \"./components/MyRestaurants\";\nimport restaurantsData from \"./components/restaurantsData.json\";\nimport axios from \"axios\";\n\n//import Fade from \"@material-ui/core/Fade\";\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [restaurants, setRestaurants] = React.useState(restaurantsData);\n  const [venues, setVenues] = React.useState([]);\n  const [position, setPosition] = React.useState([4.05382, 9.73432]);\n\n  //Get the venues filtering by position from the FourSquare Api\n  useEffect(() => {\n    getVenues(position);\n  }, [position]);\n  \n  // Give the position of the center marker\n  useEffect(() => {\n    getLocation();\n  }, []);\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  function showPosition(position) {\n    setPosition([position.coords.latitude, position.coords.longitude]);\n  }\n  //Open the Drawer\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  //Close the Drawer\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  //Set the Four Square API parameters\n  let getVenues = () => {\n    const endPoint = \"https://api.foursquare.com/v2/venues/search?\";\n    const parameters = {\n      client_id: \"IQJPRMFP1NKKXV4ITTPN50K2RCGLUL5DZ1HDNIPBTRGUBLYL\",\n      client_secret: \"WQCQISY2FCGMXDJF1QOHFC2ADUZIGCWZMVSB45CFQVDWIGFA\",\n      query: \"food\",\n      near: \"Douala\",\n      v: \"20210301\",\n      radius: \"2000\",\n      ll: \"4.05382,9.73432\",\n      categoryId: \"4d4b7105d754a06374d81259\",\n    };\n\n    axios\n      .get(endPoint + new URLSearchParams(parameters))\n      .then((response) => {\n        setVenues(response.data.response.venues);\n        let rests = [...restaurants];\n        for (let venue of response.data.response.venues) {\n          console.log(\"Shazam***\", venue);\n          let newRestaurant = {\n            id: \"\",\n            position: [venue.location.lat, venue.location.lng],\n            restaurant_name: venue.name,\n            restaurant_description: venue.categories[0].pluralName,\n            restaurant_image:\n              \"http://localhost:3000/placeholder-restaurant.png\",\n            address: venue.location.address,\n            avg_rating: 5,\n            reviews: [],\n            isReviewsOpen: false,\n          };\n          rests.push(newRestaurant);\n        }\n        setRestaurants(rests);\n        //console.log('Here we go ! ...', response.data.response.venues)\n      })\n      .catch((error) => {\n        console.log(\"ERROR|| \" + error);\n      });\n  };\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Restaurants Of Ange Raphael In Douala.\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <MyRestaurants\n          restaurants={restaurants}\n          setRestaurants={setRestaurants}\n        />\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Map restaurants={restaurants} setRestaurants={setRestaurants} />\n      </main>\n    </div>\n  );\n}\n// <=>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// <=>\n"],"sourceRoot":""}